apiVersion: batch/v1
kind: Job
metadata:
  name: azurite-init
spec:
  backoffLimit: 3          # Retry up to 3 times if it fails
  template:
    spec:
      restartPolicy: Never
      containers:
      - name: azurite-init
        image: python:3.12-slim
        env:
          - name: RAY_CONNECTION_STR
            valueFrom:
              secretKeyRef:
                name: ray-connection-str
                key: RAY_CONNECTION_STR
        command:
          - /bin/sh
          - -c
          - |
            pip install azure-storage-blob
            python3 - <<'EOF'
            from azure.storage.blob import BlobServiceClient
            from azure.core.exceptions import ResourceExistsError
            print("Creating Azurite container...")
            
            client = BlobServiceClient.from_connection_string(
                "DefaultEndpointsProtocol=http;AccountName=devstoreaccount1;AccountKey=Eby8vdM02xNOcqFlqUwJPLlmEtlCDXJ1OUzFT50uSRZ6IFsuFq2UVErCz4I6tq/K1SZFPTOtr/KBHBeksoGMGw==;BlobEndpoint=http://azurite:10000/devstoreaccount1;"
            )
            
            containers = ["landing", "dispatch", "notification"]

            for container_name in containers:
                try:
                    client.create_container(container_name)
                    print(f"<{container_name}> Container created.")
                except ResourceExistsError:
                    print(f"<{container_name}> already exists, skipping.")

            EOF
